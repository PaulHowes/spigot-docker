buildscript {
    dependencies {
        classpath group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    }
}

plugins {
    id 'de.undercouch.download' version '3.4.3'
    id 'com.palantir.docker' version '0.20.1'
    id 'com.palantir.docker-run' version '0.20.1'
}

defaultTasks 'build'

// Validates the version of Spigot against the versions retrieved from their webpage.
task spigotVersionValidator {
    doLast {
        def versions = []
        def versionDocument = org.jsoup.Jsoup.connect('https://hub.spigotmc.org/versions').get()
        def versionLinks = versionDocument.select('a[href]')
        versionLinks.each { versionLink ->
            def href = versionLink.attr('href')
            if (href.startsWith('1.')) {
                versions << href - '.json'
            }
        }

        if (!project.hasProperty('spigotRev') || !versions.contains(project.property('spigotRev'))) {
            throw new InvalidUserDataException('Specify version of Spigot to build with -PspigotRev=<version> where <version> is one of ' + versions.sort())
        }
    }
}

// Downloads the Spigot build tools used to build the Spigot server.
task downloadBuildTools(type: Download, dependsOn: 'spigotVersionValidator') {
    def outputFile = new File(buildDir, 'BuildTools.jar')

    group 'Build'
    description 'Downloads the Spigot build tools.'
    src 'https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar'
    dest buildDir
    onlyIfModified true
    outputs.file outputFile
}

// Builds Spigot using the BuildTools.jar download.
task build(type: Exec, dependsOn: 'downloadBuildTools') {
    def inputFile = new File(buildDir, 'Buildtools.jar')
    def bukkitFile = new File(buildDir, "craftbukkit-${spigotRev}.jar")
    def spigotFile = new File(buildDir, "spigot-${spigotRev}.jar")

    group 'Build'
    description 'Builds the Spigot server.'
    workingDir buildDir
    inputs.file inputFile
    outputs.files([bukkitFile, spigotFile])
    commandLine 'java', '-jar', 'BuildTools.jar', '--rev', spigotRev
}

// Builds the Docker image for Spigot.
docker() {
    def bukkitFile = new File(buildDir, "craftbukkit-${spigotRev}.jar")
    def spigotFile = new File(buildDir, "spigot-${spigotRev}.jar")

    name "spigot:${spigotRev}"
    buildArgs([SPIGOT_REV: spigotRev])
    files bukkitFile, spigotFile
}

// Runs Spigot in Docker. Note that the /tmp/spigot/* directories must exist and the Minecraft eula file already be populated.
dockerRun() {
    name 'spigot'
    image "spigot:${spigotRev}"
    volumes '/tmp/spigot/config': '/var/lib/spigot/config', '/tmp/spigot/worlds': '/var/lib/spigot/worlds'
    ports '25565:25565'
}
